// <auto-generated />
using System;
using CodeZoneTask.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeZoneTask.Infrastructure.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20240706202741_Mig3")]
    partial class Mig3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeZoneTask.Core.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Electronics",
                            Description = "15-inch, 16GB RAM, 512GB SSD",
                            Manufacturer = "TechCorp",
                            Name = "Laptop",
                            Price = 999.99m,
                            SKU = "LAP123"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Groceries",
                            Description = "1 liter, full cream",
                            ExpirationDate = new DateTime(2024, 8, 6, 23, 27, 38, 268, DateTimeKind.Local).AddTicks(6443),
                            Manufacturer = "DairyBest",
                            Name = "Milk",
                            Price = 1.99m,
                            SKU = "MIL456"
                        });
                });

            modelBuilder.Entity("CodeZoneTask.Core.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactNumber = "555-1234",
                            Email = "main@warehouse.com",
                            Location = "123 Main St, Anytown",
                            ManagerName = "John Doe",
                            Name = "Main Warehouse",
                            OpeningHours = "9 AM - 5 PM"
                        },
                        new
                        {
                            Id = 2,
                            ContactNumber = "555-5678",
                            Email = "downtown@store.com",
                            Location = "456 Market St, Big City",
                            ManagerName = "Jane Smith",
                            Name = "Downtown Store",
                            OpeningHours = "10 AM - 8 PM"
                        });
                });

            modelBuilder.Entity("CodeZoneTask.Core.Entities.StoreItem", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("StoreId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("StoreItems");
                });

            modelBuilder.Entity("CodeZoneTask.Core.Entities.StoreItem", b =>
                {
                    b.HasOne("CodeZoneTask.Core.Entities.Item", "Item")
                        .WithMany("StoreItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeZoneTask.Core.Entities.Store", "Store")
                        .WithMany("StoreItems")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("CodeZoneTask.Core.Entities.Item", b =>
                {
                    b.Navigation("StoreItems");
                });

            modelBuilder.Entity("CodeZoneTask.Core.Entities.Store", b =>
                {
                    b.Navigation("StoreItems");
                });
#pragma warning restore 612, 618
        }
    }
}
